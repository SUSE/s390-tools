#!/bin/bash
#
# zfcp_san_disc
#
# Outputs a list of zFCP WWPNs or LUNs
#
# Usage:
#   zfcp_san_disc [ -h | -W | -L -p <WWPN> ] -b <BUS_ID>
#
# Return codes
#   1  zFCP sysfs directory not available
#   2  Invalid command line parameter
#   3  Too many commands used
#   4  Error retrieving HBA list
#   5  Bus ID not found
#   6  Error retrieving Port list
#   7  WWPN not found
#   8  Bus ID sysfs directory not available
#   9  WWPN sysfs directory not available/unable to add port to Bus ID
#  10  Error retrieving LUN list
#  11  HBA API device not available
#

START_DIR=`pwd`
SCRIPT_NAME=`basename $0`
cd `dirname $0`
SCRIPT_DIR=`pwd`
cd "${START_DIR}"

FCP_SYS_DIR='/sys/bus/ccw/drivers/zfcp'

# Commands available
LIST_WWPN='-W'
LIST_LUN='-L'

COMMAND=''
BUSID=''
WWPN=''

echo_err()
{
	echo "$SCRIPT_NAME: $1" 1>&2
}

usage()
{
	echo "$0 [ -h | $LIST_WWPN | $LIST_LUN -p <WWPN> ] -b <BUS_ID>" 1>&2
	echo 1>&2
	echo "Commands:" 1>&2
	echo "	$LIST_WWPN		List WWPNs for the given BUS_ID" 1>&2
	echo "	$LIST_LUN		List LUNs for the given BUS_ID and WWPN" 1>&2
	echo "	-h		This usage information" 1>&2
	echo "Options:" 1>&2
	echo "	-b BUSID	Bus ID to use for listing" 1>&2
	echo "	-p WWPN		WWPN to use for listing" 1>&2
}

list_lun()
{
	local PRINT_WWPN
	local BUSID_DIR
	local WWPN_DIR
	local ADDED_PORT

}

while [ $# -gt 0 ]
do
	case "$1" in
		-b* )
			if [ "$1" == "-b" ]
			then
				shift
				BUSID="$1"
			else
				BUSID="${1:2}"
			fi
			BUSID=`echo $BUSID | tr A-F a-f`
			;;
		-p* )
			if [ "$1" == "-p" ]
			then
				shift
				WWPN="$1"
			else
				WWPN="${1:2}"
			fi
			WWPN=`echo $WWPN | tr A-FX a-fx`
			;;
		"$LIST_WWPN"|"$LIST_LUN" )
			if [ -z "$COMMAND" -o "$1" == "$COMMAND" ]
			then
				COMMAND=$1
			else
				echo_err "You have alread specified the $COMMAND command, and cannot use the $1 command also."
				exit 3
			fi
			;;
		-h|--help )
			usage
			exit 0
			;;
		* )
			usage
			echo_err "Unknown command line parameter : $1"
			exit 2
			;;
	esac
	shift
done

if [ -z "$BUSID" ] ; then
    echo_err "No bus ID given"
    exit 2
fi

if [ -z "$COMMAND" ] ; then
    echo_err "Please specify either -W or -L"
    exit 2
fi

if [ ! -d /sys/bus/ccw/devices/$BUSID ] ; then
    echo_err "Unknown bus ID $BUSID"
    exit 2
fi

read devtype < /sys/bus/ccw/devices/$BUSID/devtype
read cutype < /sys/bus/ccw/devices/$BUSID/cutype

if [ "$cutype" != "1731/03" ] ; then
    echo_err "Bus ID $BUSID is not an zfcp adapter"
    exit 2
fi

if [ "$devtype" != "1732/03" -a "$devtype" != "1732/04" ] ; then
    echo_err "Bus ID $BUSID is not an zfcp adapter"
    exit 2
fi

# Now we're sure we're dealing with zfcp devices
if [ ! -d "$FCP_SYS_DIR" ] ; then
    modprobe zfcp
fi

read online < /sys/bus/ccw/devices/$BUSID/online

if [ "$online" != 1 ] ; then
    # Activate adapter
    echo 1 > /sys/bus/ccw/devices/$BUSID/online
    read online < /sys/bus/ccw/devices/$BUSID/online

    if [ "$online" != 1 ] ; then
	echo_err "Cannot activate zfcp adapter at $BUSID"
	exit 2
    fi
    online=2
fi

[ "$COMMAND" == "$LIST_LUN" -a -z "$WWPN" ] && usage && exit 2

modprobe -q zfcp_hbaapi

HBAAPI_START_DELAY=5
while [ ! -c /dev/zfcp_hbaapi ] ; do
	if [ "$HBAAPI_START_DELAY" -lt 0 ] ; then
		echo_err "HBA API device is not available"
		exit 11
	fi
	sleep 1s
	let 'HBAAPI_START_DELAY -= 1'
done

HBA_LIST=`san_disc -c HBA_LIST`
ERR=$?
if [ $ERR -ne 0 ]
then
	echo_err "Attempting to retrieve the HBA list returned error : $ERR"
	[ "$online" = 2 ] && echo 0 > /sys/bus/ccw/devices/$BUSID/online
	exit 4
fi

# The san_disc utility does not fill a full four-byte number for the BUSID.
# This trims the BUSID to match the output of san_disc.

SAN_DISC_BUSID="${BUSID%.*}.`expr "${BUSID##*.}" : '0*\([1-9a-f].*\)' '|' '0'`"

ADAPTER=`echo "$HBA_LIST" | awk '$5 == "'"$SAN_DISC_BUSID"'" {print $1;exit}'`

# Bug 326963 - sometimes the adapter is missing a serial number, moving the
#              BUSID from field 5 to field 4.
if [ -z "$ADAPTER" ]
then
	ADAPTER=`echo "$HBA_LIST" | awk '$4 == "'"$SAN_DISC_BUSID"'" {print $1;exit}'`
fi

if [ -z "$ADAPTER" ]
then
	echo_err "Unable to find an adapter with a Bus ID of '$BUSID'"
	[ "$online" = 2 ] && echo 0 > /sys/bus/ccw/devices/$BUSID/online
	exit 5
fi

WWPN_LIST=""
# BUG 466493 - a point-to-point connection to the san will not respond
# properly to a PORT_LIST, but is visible via the peer_wwpn sysfs file.
if [ "$(cat /sys/bus/ccw/devices/$BUSID/peer_wwpn)" != "0x0000000000000000" ]
then
	WWPN_LIST="$(cat /sys/bus/ccw/devices/$BUSID/peer_wwpn)"
else
	PORT_LIST=`san_disc -a "$ADAPTER" -V -c PORT_LIST 2>/dev/null`
	ERR=$?
	if [ $ERR -ne 0 ]
	then
		echo_err "Attempting to retrieve the port list returned error : $ERR"
		[ "$online" = 2 ] && echo 0 > /sys/bus/ccw/devices/$BUSID/online
		exit 6
	fi

	WWPN_LIST=`echo "$PORT_LIST" | awk '$2 ~ /^0x/ {print $2}' | sort -u`
fi

for FIND_WWPN in $WWPN_LIST
do
	PRINT_WWPN=''
	if [ "$FIND_WWPN" = "$WWPN" -o "$COMMAND" == "$LIST_WWPN" ]
	then
		PRINT_WWPN="$FIND_WWPN"
	fi

	if [ -z "$PRINT_WWPN" ]
	then
		continue
	fi

	BUSID_DIR="${FCP_SYS_DIR}/${BUSID}"

	if [ ! -d "${BUSID_DIR}" ]
	then
		echo_err "Unable to find sys directory for Bus ID $BUSID"
		[ "$online" = 2 ] && echo 0 > /sys/bus/ccw/devices/$BUSID/online
		exit 8
	fi

	WWPN_DIR="${BUSID_DIR}/${PRINT_WWPN}"
	ADDED_PORT=''

	# If the port directory doesn't exist, add the port ... but remember
	if [ ! -d "${WWPN_DIR}" ]
	then
		echo "$PRINT_WWPN" > "${BUSID_DIR}/port_add"
		ADDED_PORT='yes'
	fi

	if [ ! -d "${WWPN_DIR}" -a "$COMMAND" == "$LIST_LUN" ]
	then
		echo_err "Unable to add port $PRINT_WWPN to Bus ID $BUSID"
		[ "$online" = 2 ] && echo 0 > /sys/bus/ccw/devices/$BUSID/online
		exit 9
	fi

	LUN_LIST=`san_disc -a "$ADAPTER" -p "$PRINT_WWPN" -c REPORT_LUNS 2>/dev/null`
	ERR=$?

	if [ ! -z "$ADDED_PORT" ]
	then
		echo "$PRINT_WWPN" > "${BUSID_DIR}/port_remove"
		ADDED_PORT=''
	fi

	LUN_LIST=$(echo "$LUN_LIST" | awk '$2 ~ /^0x/ {print $2}' | sort -u)

	if [ "$ERR" -eq 0 ]
	then
		if [ "$COMMAND" == "$LIST_WWPN" ]
		then
			if [ ! -z "$LUN_LIST" ]
			then
				echo "$PRINT_WWPN"
			fi
		else
			echo "$LUN_LIST"
			[ "$online" = 2 ] && echo 0 > /sys/bus/ccw/devices/$BUSID/online
			exit 0
		fi
	else
		if [ "$COMMAND" == "$LIST_LUN" ]
		then
			echo_err "Error $ERR attempting to retrieve LUN list"
			[ "$online" = 2 ] && echo 0 > /sys/bus/ccw/devices/$BUSID/online
			exit 10
		fi
	fi
done

[ "$online" = 2 ] && echo 0 > /sys/bus/ccw/devices/$BUSID/online

if [ "$COMMAND" == "$LIST_LUN" ]
then
	echo_err "Unable to find WWPN $WWPN using the Bus ID $BUSID"
	exit 7
fi

exit 0
